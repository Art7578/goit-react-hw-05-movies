{"version":3,"file":"static/js/853.c1ba0996.chunk.js","mappings":"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","sources":["API.jsx","webpack://react-homework-template/./src/components/MoviePreview/MoviePreview.module.css?43aa","components/MoviePreview/MoviePreview.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/Pageheading/Pageheading.module.css?c3d3","components/Pageheading/Pageheading.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","page/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '8e49cbba380ebc6498ddfc781ac5e247';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    search: '/search/movie',\n    details: '/movie',\n    credits: '/credits',\n    reviews: '/reviews',\n};\n\nexport const getMovies = async(page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.search}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n    const res = await axios.get(\n        `${END_POINTS.details}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data;\n}\n\nexport const fetchMoviesCredits = async id => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.credits}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async(id, page = 1) => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.reviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return res.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MoviePreview_card__sNPHR\",\"thumb\":\"MoviePreview_thumb__-yP6Q\",\"poster\":\"MoviePreview_poster__TI9gI\",\"text\":\"MoviePreview_text__bJwKL\",\"vote\":\"MoviePreview_vote__B+2c4\"};","import PropTypes from 'prop-types';\nimport css from './MoviePreview.module.css';\n\n\n// Компонент превью фильма в общем списке фильмов\nconst MoviePreview = ({ title, poster, vote }) => {\n  const posterUrl = poster\n    ? `https://image.tmdb.org/t/p/w500${poster}`\n    : null;\n  \n\n  return (\n    <div className={css.card}>\n      <div className={css.thumb}>\n        <img\n          src={posterUrl}\n          alt={title}\n          title={title}\n          className={css.poster}\n        />\n      </div>\n\n      <p className={css.text}>\n        <span>{title}</span>\n        {vote ? <b className={css.vote}>{vote}</b> : null}\n      </p>\n    </div>\n  );\n};\n\nMoviePreview.defaultProps = {\n  poster: '',\n  vote: null,\n};\n\nMoviePreview.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  vote: PropTypes.number,\n};\n\nexport default MoviePreview;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"link\":\"MovieList_link__+cn-g\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport MoviePreview from 'components/MoviePreview/MoviePreview';\nimport css from './MovieList.module.css';\n\nconst MovieList = ({movies, prevLocation}) => {\n    return (\n        <>\n        <ul className={css.list}>\n            {movies.map(({id, original_title, title, poster_path, vote_average }) => (\n                <li key={id} className={css.item}>\n                    <Link to={`/movies/${id}`} state={{from: prevLocation}} className={css.link}>\n                    <MoviePreview\n                        title={original_title}\n                        poster={poster_path}\n                        vote={vote_average}\n                        />\n                    </Link>\n                </li>\n            ))}\n        </ul>\n        </>\n    );\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            original_title: PropTypes.string.isRequired,\n            poster_path: PropTypes.string.isRequired,\n            vote_average: PropTypes.number,\n        })\n    ).isRequired,\n};\nexport default MovieList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Pageheading_title__ZNlVz\"};","import css from './Pageheading.module.css';\n\nexport default function PageHeading({text}) {\n    return <h1 className={css.title}>{text}</h1>\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"input\":\"SearchBar_input__bIy50\",\"button\":\"SearchBar_button__T7RTc\"};","import css from './SearchBar.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({onSearch}) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleQuerySearch = event => {\n        setSearchQuery(event.target.value.toLowerCase());\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (searchQuery.trim() === '') {\n            alert('Enter the film title');\n        }\n\n        onSearch(searchQuery);\n        setSearchQuery('');\n    };\n\n    return (\n        <>\n        <form onSubmit={handleSubmit} className={css.form}>\n            <input\n            type=\"text\"\n            name=\"serachQuery\"\n            value={searchQuery}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search...\"\n            onChange={handleQuerySearch}\n            className={css.input}\n            />\n            <button \n            type=\"submit\"\n            className={css.button}\n            >\n                Search\n            </button>\n        </form>\n        </>\n    );\n};\n\nSearchBar.propTypes = {\n    onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;","import { useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchByQuery } from \"API\";\nimport SearchBar from \"components/SearchBar/SearchBar\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport Container from \"components/Container/Container\";\nimport PageHeading from \"components/Pageheading/Pageheading\";\n\nconst MoviesPage = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const location = useLocation();\n    const searchRequest = searchParams.get('query');\n\n    useEffect(() => {\n        if (!searchRequest) {\n            return;\n        }\n\n        const fetchMovie = () => {\n            setLoading(true);\n            fetchByQuery(searchRequest)\n                .then(results => {\n                    if (!results.length) {\n                        alert('No movies found!');\n                    }\n\n                    setMovies(results);\n                })\n                .catch(error => {\n                    setError('Something went wrong.Sorry...');\n                    console.log(error)\n                })\n                .finally(setLoading(false));\n        };\n        fetchMovie();\n    }, [searchRequest]);\n\n    function onSubmit(value) {\n        setSearchParams ({query: `${value}`});\n    }\n\n    return (\n        <>\n            <Container>\n                <PageHeading text={'Movie Search'}/>\n                {loading && 'Loading...'}\n                {error && <div>{error}</div>}\n\n                <SearchBar onSearch={onSubmit}/>\n                {movies && <MovieList movies={movies} prevLocation={location}/>}\n            </Container>\n        </>\n    );\n};\n\nexport default MoviesPage"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","MoviePreview","title","poster","vote","posterUrl","className","css","src","alt","defaultProps","movies","prevLocation","map","original_title","poster_path","vote_average","to","state","from","PageHeading","text","onSearch","useState","searchQuery","setSearchQuery","onSubmit","event","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","catch","console","log","finally","Container","MovieList"],"sourceRoot":""}