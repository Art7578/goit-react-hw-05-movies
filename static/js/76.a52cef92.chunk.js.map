{"version":3,"file":"static/js/76.a52cef92.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACQ,uBADRA,EAEM,gBAFNA,EAGO,SAHPA,EAIO,WAJPA,EAKO,WAGAC,EAAS,mCAAG,yGAAMC,EAAN,+BAAa,EAAb,SACHH,EAAAA,EAAAA,IAAA,UACXC,EADW,oBACoBF,EADpB,iBACoCI,EADpC,wCADG,cACfC,EADe,yBAIdA,EAAIC,KAAKC,SAJK,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACNH,EAAAA,EAAAA,IAAA,UACXC,EADW,oBACkBF,EADlB,iBACkCI,EADlC,kBACgDK,EADhD,wCADM,cAClBJ,EADkB,yBAIjBA,EAAIC,KAAKC,SAJQ,2CAAH,sDAOZG,EAAkB,mCAAG,WAAMC,GAAN,uFACZV,EAAAA,EAAAA,IAAA,UACXC,EADW,YACWS,EADX,oBACyBX,EADzB,oBADY,cACxBK,EADwB,yBAIvBA,EAAIC,MAJmB,2CAAH,sDAOlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACZV,EAAAA,EAAAA,IAAA,iBACJU,GADI,OACCT,EADD,oBAC+BF,EAD/B,oBADY,cACxBK,EADwB,yBAIvBA,EAAIC,KAAKO,MAJc,2CAAH,sDAOlBC,EAAkB,mCAAG,WAAMH,GAAN,4FAAUP,EAAV,+BAAiB,EAAjB,SACZH,EAAAA,EAAAA,IAAA,iBACJU,GADI,OACCT,EADD,oBAC+BF,EAD/B,gCAC8DI,IAFlD,cACxBC,EADwB,yBAIvBA,EAAIC,KAAKC,SAJc,2CAAH,qD,0GCxC/B,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA2E,mBAA3E,EAA0G,wB,oCCkD1G,EA9Ca,WACT,IAAOQ,GAAWC,EAAAA,EAAAA,MAAXD,QAEP,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,oGAEVF,GAAW,GAFD,UAGQV,EAAAA,EAAAA,IAAmBG,GAH3B,OAGJV,EAHI,OAIVa,EAAQb,GAJE,gDAMVe,EAAS,2BANC,yBAQVE,GAAW,GARD,4EAAH,qDAWfE,GACH,GAAE,CAACT,KAGA,gCACCM,GAAW,aACXF,IAAS,yBAAMA,KAChB,eAAIM,UAAWC,EAAf,SACKb,EAAKc,KAAI,SAAAC,GACN,OACI,gBAAsBH,UAAWC,EAAjC,WACI,gBACAG,IAAG,yCAAoCD,EAASE,cAChDC,IAAG,UAAKH,EAASI,KAAd,gBAEH,4BACI,eAAGP,UAAWC,EAAd,mBAA+BE,EAASI,SACxC,eAAGP,UAAWC,EAAd,wBAAyCE,EAASK,kBAPjDL,EAASjB,GAWzB,QAIZ,C","sources":["API.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '8e49cbba380ebc6498ddfc781ac5e247';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    search: '/search/movie',\n    details: '/movie',\n    credits: '/credits',\n    reviews: '/reviews',\n};\n\nexport const getMovies = async(page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.search}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n    const res = await axios.get(\n        `${END_POINTS.details}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data;\n}\n\nexport const fetchMoviesCredits = async id => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.credits}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async(id, page = 1) => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.reviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return res.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"name\":\"Cast_name__6UbFm\",\"character\":\"Cast_character__tKDlA\"};","import css from './Cast.module.css'\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMoviesCredits } from 'API';\n\nconst Cast = () => {\n    const {movieId} = useParams();\n\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchCast = async() => {\n            try {\n                setLoading(true);\n                const res = await fetchMoviesCredits(movieId);\n                setCast(res);\n            } catch (error) {\n                setError('Something went wrong :(');\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchCast();\n    }, [movieId]);\n\n    return (\n        <>\n        {loading && 'Loading...'}\n        {error && <div>{error}</div>}\n        <ul className={css.list}>\n            {cast.map(castItem => {\n                return (\n                    <li key={castItem.id} className={css.item}>\n                        <img\n                        src={`https://image.tmdb.org/t/p/w300${castItem.profile_path}`}\n                        alt={`${castItem.name} portrait`}\n                        />\n                        <div>\n                            <p className={css.name}>Name: {castItem.name}</p>\n                            <p className={css.character}>Character: {castItem.character}</p>\n                        </div>\n                    </li>\n                );\n            })}\n        </ul>\n        </>\n    );\n};\n\nexport default Cast;"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","movieId","useParams","useState","setCast","error","setError","loading","setLoading","useEffect","fetchCast","className","css","map","castItem","src","profile_path","alt","name","character"],"sourceRoot":""}