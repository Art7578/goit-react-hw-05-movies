{"version":3,"file":"static/js/186.33324d94.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACQ,uBADRA,EAEM,gBAFNA,EAGO,SAHPA,EAIO,WAJPA,EAKO,WAGAC,EAAS,mCAAG,yGAAMC,EAAN,+BAAa,EAAb,SACHH,EAAAA,EAAAA,IAAA,UACXC,EADW,oBACoBF,EADpB,iBACoCI,EADpC,wCADG,cACfC,EADe,yBAIdA,EAAIC,KAAKC,SAJK,2CAAH,qDAOTC,EAAY,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACNH,EAAAA,EAAAA,IAAA,UACXC,EADW,oBACkBF,EADlB,iBACkCI,EADlC,kBACgDK,EADhD,wCADM,cAClBJ,EADkB,yBAIjBA,EAAIC,KAAKC,SAJQ,2CAAH,sDAOZG,EAAkB,mCAAG,WAAMC,GAAN,uFACZV,EAAAA,EAAAA,IAAA,UACXC,EADW,YACWS,EADX,oBACyBX,EADzB,oBADY,cACxBK,EADwB,yBAIvBA,EAAIC,MAJmB,2CAAH,sDAOlBM,EAAkB,mCAAG,WAAMD,GAAN,uFACZV,EAAAA,EAAAA,IAAA,iBACJU,GADI,OACCT,EADD,oBAC+BF,EAD/B,oBADY,cACxBK,EADwB,yBAIvBA,EAAIC,KAAKO,MAJc,2CAAH,sDAOlBC,EAAkB,mCAAG,WAAMH,GAAN,4FAAUP,EAAV,+BAAiB,EAAjB,SACZH,EAAAA,EAAAA,IAAA,iBACJU,GADI,OACCT,EADD,oBAC+BF,EAD/B,gCAC8DI,IAFlD,cACxBC,EADwB,yBAIvBA,EAAIC,KAAKC,SAJc,2CAAH,qD,yGCD/B,UApCgB,WACZ,IAAOQ,GAAWC,EAAAA,EAAAA,MAAXD,QAEP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAEKT,EAAAA,EAAAA,IAAmBC,GAFxB,OAEPV,EAFO,OAGbmB,QAAQC,IAAIpB,GACZc,EAAWd,GAJE,gDAMbgB,EAAS,EAAD,IANK,yDAAH,qDASlBE,GACH,GAAE,CAACR,KAGA,gCACCK,IAAS,yBAAMA,KAChB,wBACKF,EAAQQ,KAAI,SAAAC,GACT,OACI,2BACI,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFNF,EAAOhB,GAKvB,QAIZ,C","sources":["API.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = '8e49cbba380ebc6498ddfc781ac5e247';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n    trending: '/trending/movie/week',\n    search: '/search/movie',\n    details: '/movie',\n    credits: '/credits',\n    reviews: '/reviews',\n};\n\nexport const getMovies = async(page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\nexport const fetchByQuery = async (query, page = 1) => {\n    const res = await axios.get(\n        `${END_POINTS.search}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n    );\n    return res.data.results;\n};\n\nexport const fetchMoviesDetails = async id => {\n    const res = await axios.get(\n        `${END_POINTS.details}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data;\n}\n\nexport const fetchMoviesCredits = async id => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.credits}?api_key=${API_KEY}&language=en-US`\n    );\n    return res.data.cast;\n};\n\nexport const fetchMoviesReviews = async(id, page = 1) => {\n    const res = await axios.get(\n        `/movie/${id}${END_POINTS.reviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n    );\n    return res.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReviews } from 'API';\n\nconst Reviews = () => {\n    const {movieId} = useParams();\n\n    const [reviews, setReviews] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchReviews = async() => {\n            try {\n                const res = await fetchMoviesReviews(movieId);\n                console.log(res);\n                setReviews(res);\n            } catch (error) {\n                setError(error);\n            }\n        };\n        fetchReviews();\n    }, [movieId]);\n\n    return (\n        <>\n        {error && <div>{error}</div>}\n        <ul>\n            {reviews.map(review => {\n                return (\n                    <li key={review.id}>\n                        <p>Author: {review.author}</p>\n                        <p>{review.content}</p>\n                    </li>\n                );\n            })}\n        </ul>\n        </>\n    );\n};\n\nexport default Reviews;"],"names":["API_KEY","axios","END_POINTS","getMovies","page","res","data","results","fetchByQuery","query","fetchMoviesDetails","id","fetchMoviesCredits","cast","fetchMoviesReviews","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","console","log","map","review","author","content"],"sourceRoot":""}